/*remove all */
db.user.remove({})

qa href: /qa/question?qid=15101153335863

{
  "_id" : ObjectId("5612de9f8f8b79964776581c"),
  "role" : 1,
  "poster_id" : ObjectId("5611f401ce5001a4267c83d3"),
  "post_cat" : 1,
  "post_title" : "test first post",
  "post_time" : ISODate("2015-10-05T20:33:35.863Z"),
  "content" : "test first posttest first post",
  "poster_fullname" : "Bowei Liu",
  "__v" : 0
}

 db.post.find({role:1}).pretty()

 db.post.remove({role:{$ne:1}});

weahter memo
provider: http://openweathermap.org/api
64bb5bb6fbdeb48105b321b7c6ddae37

GeoJson feature example
{
   "type":"FeatureCollection",
   "features":[
      {
         "type":"Feature",
         "geometry":{
            "type":"Polygon",
            "coordinates":[
               [
                  [100.0,0.0],
                  [101.0,0.0],
                  [101.0,1.0],
                  [100.0,1.0],
                  [100.0,0.0]
               ],
               [
                  [100.2,0.2],
                  [100.5,0.0],
                  [100.5,1.0],
                  [100.2,0.2]
               ]
            ]
         },
         "properties":{
            "prop0":"value0",
            "prop1":{
               "this":"that"
            }
         }
      }
   ]
}



// for /landscape/treatment
{"geometry":{"type":"Polygon","coordinates":[[[-96.32967,30.620187],[-96.328039,30.619411],[-96.330228,30.615829],[-96.331129,30.618211],[-96.330721,30.619633],[-96.32967,30.620187]]]},"properties":{"prop0":"value0","prop1":"value1","landusage":"lawnturf","treatment":"imt", "mound_density":0.25}}


http://localhost:3000/landscape/treatment/563906ab826cb74c386b5541

http://localhost:3000/landscape/homeownermng/563906ab826cb74c386b5541



db.fire_ant_product.update({usage:"IMT"}, {$set:{usage:"imt"}}, {multi:true})
db.fire_ant_product.update({usage:"Broadcast"}, {$set:{usage:"broadcast"}}, {multi:true})
db.fire_ant_product.update({usage:"Line"}, {$set:{usage:"line"}}, {multi:true})


{
  "_id" : ObjectId("5611f401ce5001a4267c83d3"),
  "email" : "bowei_liu@ymail.com",
  "password_hash" : "test",
  "first_name" : "Bowei",
  "last_name" : "Liu",
  "usercat" : 2,
  "__v" : 0
}


db.user.update({first_name:"Bowei"}, {$set:{password_hash:"test",email:"boweiliu2014@gmail.com"}})


db.ant_distribution.aggregate(
  [
    {$match: { }},
    { $group: { _id: "$fips", count: { $sum: 1 } } }

  ]
  Genus
["Acanthomyops", "Acanthostichus", "Acromyrmex", "Amblyopone", "Aphaenogaster", "Atta", "Brachymyrmex", "Camponotus", "Cardiocondyla", "Cephalotes", "Cerapachys", "Crematogaster", "Cryptopone", "Cyphomyrmex", "Dorymyrmex", "Eciton", "Ectatomma", "Forelius", "Formica", "Gnamptogenys", "Hypoponera", "Labidus", "Lasius", "Leptogenys", "Leptothorax", "Linepithema", "Liometopum", "Monomorium", "Mycetosoritis", "Myrmecina", "Myrmecocystus", "Myrmica", "Neivamyrmex", "Nomamyrmex", "Odontomachus", "Oligomyrmex", "Pachycondyla", "Paratrechina", "Pheidole", "Platythyrea", "Pogonomyrmex", "Ponera", "Prenolepsis", "Proceratium", "Pseudomyrmex", "Rogeria", "Smithistruma", "Solenopsis", "Stenamma", "Strumigenys", "Tapinoma", "Tetramorium", "Trachymyrmex", "Trichoscapa"].forEach(function(genus, index, arr ){
  db.ant_distribution.find({genus:genus});
});


db.ant_distribution.aggregate([ {$group:{_id:"$genus", species_array:{$addToSet:"$species"}}},{$sort:{_id:1}}]).toArray()

将mongo数据导出为文件
mongo --quiet fasids --eval 'printjson(  db.ant_distribution.aggregate([ {$group:{_id:"$genus", species_array:{$addToSet:"$species"}}},{$sort:{_id:1}}]).toArray() )' > output.json

为remote mongo导入数据
remote mongoDB
mongoimport -u <username> -p <password here> -h <ip here> --db fasids --collection ant_distribution --file ant_distri.json --jsonArray
local mongoDB
mongoimport --db fasids --collection ant_distribution --file ant_distri.json --jsonArray
mongoimport -u <username> -p <password here> -h <ip here> --db fasids --collection fire_ant_product --file products.json --jsonArray
Then I need to run ./data/productimages.mongoscript.js
本地情况：mongoimport --db fasids --collection post --file posts.json --jsonArray
Find ./data/product_images.mongoscript.js, run this script at Mongo Console


下载nodejslog
rhc scp fasids download ./remotelogs/ /var/lib/openshift/5611efe689f5cf7c68000079/app-root/logs/nodejs.log


/*routes
get    "/" index page
//********* Q & A **********
get    "/qa"                         Q & A index
post   "/qa/question?qid=xxxxx"      post replies to certain question
get    "/qa/question?qid=xxxxx"      render certain questions and answers
delete "/qa/question?qid=xxxxx"      destroy this post and clean all associations    Not Done Yet
post   "/qa/posting"                 New questions posted via this route                 
get    "/qa/posting"                 Render the input page for use to post a question
get    "/qa/edit_post?post_id=xx"    Render the editor with to be edited content in  
                                     eit
post   "/qa/edit_post?post_id=xx"    update content of post instance

//********* ant activity *****
get    "/antactivity"                show ant acitvity page

//******map application ******
get    "/landscape/homeownermng"     show main page of landscape management
get    "/landscape/homeownermng/:geojson_id"   show patch page of certain geojson
delete "/landscape/homeownermng/:geojson_id"   delete geojson
post   "/landscape/homeownermng/:geojson_id/patch"   update geojson instance
get    "/landscape/treatment/:geojson_id"      show treatment (list of products and map of 
                                               polygon)
post   "/landscape/treatment"        create new geojson and show treatment
get    "/landscape/fire_ant_products"  show list of all fire_ant_products
get    "/landscape/antdistribution"    show counties map
get    "/landscape/antdistribution_lookup?genus=xx(&specie=xx)"  api for antdistribution
*/



check 
Post roughly okay
